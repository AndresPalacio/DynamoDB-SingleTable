name: Upload pypi package release

on:
  push:
    branches:
      - master
  release:
    types:
      - created

env:
  VERSION: ${{ github.event.release.tag_name != '' && github.event.release.tag_name || '0.0.0' }}

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run flake8 linter
        run: |
          flake8 ddb_single --max-line-length=120
          flake8 tests --max-line-length=120
          flake8 setup.py --max-line-length=120

      - name: Run unittest
        run: |
          docker run -d -p 8000:8000 --name dynamodb amazon/dynamodb-local:2.0.0
          coverage run -m unittest discover -s tests/
          coverage report

  deploy:
    runs-on: ubuntu-latest
    needs: lint_and_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Replace version
        run: |
          echo "__VERSION__ = '${{ env.VERSION }}'" >> ddb_single/__init__.py
          rm -rf ./tests

      - name: Build
        run: |
          python setup.py sdist --formats=zip

      - name: Publish a Python distribution to PyPI
        if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Generate docs
        run: |
          cp ./readme.md ./docs_src/readme.md
          sphinx-apidoc -f -o ./docs_src ./ddb_single
          sphinx-build ./docs_src ./docs

      - name: Publish github pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: ./docs
          clean: true
          commit-message: Deploy as of ${{ github.sha }}
